# coding: utf-8

"""
    \"Agent Toolkit: LLM-Friendly Tools and Search APIs\"

    API for LLM-friendly web search and content retrieval

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from at_client.models.search_response import SearchResponse  # noqa: E501

class TestSearchResponse(unittest.TestCase):
    """SearchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResponse:
        """Test SearchResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResponse`
        """
        model = SearchResponse()  # noqa: E501
        if include_optional:
            return SearchResponse(
                query = '',
                results = [
                    at_client.models.search_result.SearchResult(
                        title = '', 
                        snippet = '', 
                        url = '0', 
                        published_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        modified_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        crawl_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        domain = '', 
                        language = '', 
                        country = '', 
                        enhanced_with_selenium = True, )
                    ],
                summary = '',
                topic = '',
                language = '',
                country = '',
                result_count = 56,
                applied_filters = { },
                selenium_enhancement = True,
                enhanced_results_count = 56
            )
        else:
            return SearchResponse(
                query = '',
                results = [
                    at_client.models.search_result.SearchResult(
                        title = '', 
                        snippet = '', 
                        url = '0', 
                        published_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        modified_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        crawl_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        domain = '', 
                        language = '', 
                        country = '', 
                        enhanced_with_selenium = True, )
                    ],
        )
        """

    def testSearchResponse(self):
        """Test SearchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
